/************************************************************

    Following is the Binary Tree node structure:
    
   class TreeNode {
	    int data;
	    TreeNode left;
	    TreeNode right;

	    TreeNode(int data) {
		    this.data = data;
		    this.left = null;
		    this.right = null;
	    }

    }

************************************************************/

import java.util.*;

public class Solution {
	public static ArrayList<Integer>  traverseBoundary(TreeNode root){
		// Write your code here.
        ArrayList<Integer> ans=new ArrayList<>();
        if(root==null)
            return ans;
        ans.add(root.data);
        leftBoundary(root,ans);
        if(root.left==null && root.right==null)
            return ans;
        else
            leaves(root,ans);
        rightBoundary(root,ans);
        return ans;
	}
    public static void leftBoundary(TreeNode root,ArrayList<Integer> ans)
    {
        root=root.left;
        while(root!=null)
        {
            if(root.left==null && root.right==null)
                break;
            ans.add(root.data);
            if(root.left!=null)
                root=root.left;
            else
                root=root.right;
        }
    }
    public static  void leaves(TreeNode root,ArrayList<Integer> ans)
    {
        if(root==null)
            return;
        if(root.left==null && root.right==null)
        {
            ans.add(root.data);
            return;
        }
        leaves(root.left,ans);
        leaves(root.right,ans);
    }
    public static void rightBoundary(TreeNode root,ArrayList<Integer> ans)
    {
        root=root.right;
        ArrayList<Integer> temp=new ArrayList<>();
        while(root!=null)
        {
            if(root.left==null && root.right==null)
                break;
            temp.add(root.data);
            if(root.right!=null)
                root=root.right;
            else
                root=root.left;
        }
        for(int i=temp.size()-1;i>=0;i--)
        {
            ans.add(temp.get(i));
        }
    }
}