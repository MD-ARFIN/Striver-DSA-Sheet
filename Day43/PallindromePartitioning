public class Solution {

	public static int palindromePartitioning(String str) {
	    // Write your code here
        int n=str.length();
        int[][] dp=new int[n][n];
        for(int i=0;i<n;i++)
        {
            for(int j=0;j<n;j++)
                dp[i][j]=-1;
        }
        return find(str,0,n-1,dp);
	}
    public static int find(String str,int i,int j,int[][] dp)
    {
        if(i>=j || check(str,i,j))
            return 0;
        if(dp[i][j]!=-1)
            return dp[i][j];
        int min=Integer.MAX_VALUE;
        for(int k=i;k<j;k++)
        {
            int temp=1+find(str,i,k,dp)+find(str,k+1,j,dp);
            min=Math.min(temp,min);
           
        }
        return dp[i][j]=min;
    }
    public static boolean check(String s,int i,int j)
    {
        
        while(i<j)
        {
            if(s.charAt(i)!=s.charAt(j))
                return false;
            i++;j--;
        }
        return true;
    }
}
