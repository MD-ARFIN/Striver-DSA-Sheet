/*

	Following is the structure used to represent the Binary Tree Node

	class BinaryTreeNode<T> {
		T val;
		BinaryTreeNode<T> left;
		BinaryTreeNode<T> right;

		public BinaryTreeNode(T val) {
			this.val = val;
			this.left = null;
			this.right = null;
		}
	}

*/

import java.util.*;

public class Solution {

  public static ArrayList<Integer> getLevelOrder(BinaryTreeNode root) {
    //Your code goes here
      Queue<BinaryTreeNode> q=new LinkedList<>();
      ArrayList<Integer> ans=new ArrayList<>();
      if(root==null)
          return ans;
      q.offer(root);
      while(!q.isEmpty())
      {
          BinaryTreeNode temp=q.poll();
          ans.add(temp.val);
          if(temp.left!=null)
              q.offer(temp.left);
          if(temp.right!=null)
              q.offer(temp.right);
      }
      return ans;
  }

}