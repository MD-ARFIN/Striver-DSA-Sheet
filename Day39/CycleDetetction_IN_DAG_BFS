import java.util.*;
public class Solution {
  public static boolean detectCycleInDirectedGraph(int v, ArrayList < ArrayList < Integer >> edges) {
    // Write your code here.
       ArrayList<ArrayList<Integer>> adj=new ArrayList<>();
        for(int i=0;i<=v;i++)
            adj.add(new ArrayList<>());
        int inDeg[]=new int[v+1];
        for(ArrayList<Integer> edge:edges)
        {
            adj.get(edge.get(0)).add(edge.get(1));
            inDeg[edge.get(1)]++;
        }
        Queue<Integer> q=new LinkedList<>();
        int c=0;
        for(int i=1;i<=v;i++)
        {
            if(inDeg[i]==0)
                q.offer(i);
        }
        while(!q.isEmpty())
        {
            int temp=q.poll();
            c++;
            for(Integer node:adj.get(temp))
            {
                inDeg[node]--;
                if(inDeg[node]==0)
                    q.offer(node);
            }
        }
       
        return c!=v;
    }
}