public class Queue {
    Node root;
    Node tail;
    Queue() {
        // Implement the Constructor
        root=null;
        tail=root;
    }

    /*----------------- Public Functions of Queue -----------------*/

    boolean isEmpty() {
        // Implement the isEmpty() function
        return root==null;
    }

    void enqueue(int data) {
        // Implement the enqueue() function
        if(root==null)
        {
            root=new Node(data);
            tail=root;
            return;
        }        
        tail.next=new Node(data);
        tail=tail.next;        
    }

    int dequeue() {
        // Implement the dequeue() function
        if(isEmpty())
            return -1;
        int val=root.data;
        root=root.next;      
        return val;
    }

    int front() {
        // Implement the front() function
        if(isEmpty())
            return -1;
        return root.data;
    }

}
class Node
{
    int data;
    Node next;
    Node(int data)
    {
        this.data=data;
    }
}
