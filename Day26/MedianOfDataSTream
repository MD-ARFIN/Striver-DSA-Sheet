
import java.util.Comparator;
import java.util.PriorityQueue;

public class Solution {
    
    //public static List<Integer> heap;
	public static void findMedian(int arr[])  {
        
        
        /* Your class should be named Solution
		 * Don't write main().
		 * Don't read input, it is passed as function argument.
		 * Return output and don't print it.
	 	 * Taking input and printing output is handled automatically.
        */
        if(arr.length<1)
            return;
        PriorityQueue<Integer> max=new PriorityQueue<>((a,b)->b-a);
        PriorityQueue<Integer> min=new PriorityQueue<>();
        max.add(arr[0]);
        System.out.print(max.peek()+" ");
        for(int i=1;i<arr.length;i++)
        {
            int ele=arr[i];
            if(ele<max.peek())
            {
                max.add(ele);
                if(max.size()-min.size()>1)
                {
                    min.add(max.poll());
                }

            }
            else
            {
                min.add(ele);
                //System.out.println(min.peek()+"pp");
                if(min.size()-max.size()>1)
                    max.add(min.poll());
            }
           
            if((max.size()+min.size())%2!=0)
            {
                if(max.size()>min.size())
                    System.out.print(max.peek()+" ");
                else
                    System.out.print(min.peek()+" ");
            }
            else
            {
                System.out.print((max.peek()+min.peek())/2+" ");
            }
        }
        
    }  
}

    